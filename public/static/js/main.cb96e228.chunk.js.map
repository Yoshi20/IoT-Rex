{"version":3,"sources":["components/TopBar/TopBar.module.scss","components/DashBoardCard/DashBoardCard.module.scss","components/SiteHeader/SiteHeader.module.scss","screens/LoginScreen/LoginScreen.module.scss","assets/icons/dashBoard/dash-board_dev.svg","assets/icons/dashBoard/dash-board_event.svg","assets/icons/dashBoard/dash-board_org.svg","assets/icons/dashBoard/dash-board_settings.svg","assets/icons/dashBoard/dash-board_zone.svg","screens/DashboardScreen/DashboardScreen.module.scss","components/Footer/Footer.module.scss","serviceWorker.js","routers/PrivateRoute.jsx","store/modules/user.js","components/TopBar/index.jsx","screens/LoginScreen/index.jsx","components/SiteHeader/index.jsx","components/DashBoardCard/index.jsx","screens/DashboardScreen/index.jsx","screens/DevicesScreen/index.jsx","screens/OrganisationScreen/index.jsx","screens/EventsScreen/index.jsx","screens/ZonesScreen/index.jsx","screens/SettingsScreen/index.jsx","screens/ErrorScreen/index.jsx","components/Footer/index.jsx","routers/AppRouter.jsx","store/configureStore.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","PrivateRoute","children","rest","loggedIn","useSelector","state","user","render","to","pathname","from","USER_LOGIN","USER_LOGOUT","initialState","TopBar","dispatch","useDispatch","history","useHistory","dashBoardMatch","useRouteMatch","className","styles","top_bar","top_bar__left","isExact","IconButton","aria-label","onClick","push","style","width","height","color","Button","type","logout_button","LoginScreen","this","props","classes","login","TextField","id","textField","label","margin","onChange","e","InputProps","input","resize","InputLabelProps","root","autoComplete","variant","button","userLogin","replace","React","Component","mapDispatchToProps","connect","withStyles","marginTop","padding","fontSize","withRouter","SiteHeader","mainTitle","subTitle","site_header","site_header__sub","site_header__main","DashBoardCard","title","icon","targetPath","dashBoardCardWrapper","dashBoardCard","dashBoardCard__title","dashBoardCard__image","backgroundImage","DashboardScreen","dash_board_cards","DeviceIcon","OrganisationIcon","EventIcon","ZoneIcon","SettingsIcon","DevicesScreen","OrganisationScreen","EventsScreen","ZonesScreen","SettingsScreen","ErrorScreen","Footer","AppRouter","exact","path","component","reducer","combineReducers","configureStore","middleware","ReduxThunk","logger","createStore","applyMiddleware","theme","createMuiTheme","palette","primary","main","secondary","store","ReactDOM","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb96e228.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_big\":\"TopBar_header_big__33WeM\",\"top_bar\":\"TopBar_top_bar__vPp2y\",\"logout_button\":\"TopBar_logout_button__2PUTt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_big\":\"DashBoardCard_header_big__3JM0h\",\"dashBoardCardWrapper\":\"DashBoardCard_dashBoardCardWrapper__NXbaI\",\"dashBoardCard\":\"DashBoardCard_dashBoardCard__2EE5_\",\"dashBoardCard__title\":\"DashBoardCard_dashBoardCard__title__1NTOq\",\"dashBoardCard__image\":\"DashBoardCard_dashBoardCard__image__5pI2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_big\":\"SiteHeader_header_big__1pk4x\",\"site_header\":\"SiteHeader_site_header__kDwIb\",\"site_header__main\":\"SiteHeader_site_header__main__5UDnc\",\"site_header__sub\":\"SiteHeader_site_header__sub__30e5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginScreen_login__1kYxy\"};","module.exports = __webpack_public_path__ + \"static/media/dash-board_dev.ac732079.svg\";","module.exports = __webpack_public_path__ + \"static/media/dash-board_event.119dbc98.svg\";","module.exports = __webpack_public_path__ + \"static/media/dash-board_org.d544042d.svg\";","module.exports = __webpack_public_path__ + \"static/media/dash-board_settings.1b6ade15.svg\";","module.exports = __webpack_public_path__ + \"static/media/dash-board_zone.1e406d73.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dash_board_cards\":\"DashboardScreen_dash_board_cards__2DoWC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_big\":\"Footer_header_big__yzNn0\",\"top_bar\":\"Footer_top_bar__2bO-I\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport default function PrivateRoute({ children, ...rest }) {\n  const loggedIn = useSelector(state => state.user.loggedIn);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        loggedIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","/* Actions */\nconst USER_LOGIN = 'USER_LOGIN';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\nconst initialState = {\n  loggedIn: false,\n};\n\n/* Reducer */\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case USER_LOGIN:\n      return { ...state, loggedIn: true };\n    case USER_LOGOUT:\n      return { ...state, loggedIn: false };\n\n    default:\n      return state;\n  }\n}\n\n/* Action Creators */\nexport function userLogin() {\n  return { type: USER_LOGIN };\n}\n\nexport function userLogout() {\n  return { type: USER_LOGOUT };\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\n/* Components */\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport AppsIcon from '@material-ui/icons/Apps';\n// import NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\n/* Store */\nimport { userLogout } from '../../store/modules/user';\n\n/* Styles */\nimport styles from './TopBar.module.scss';\n\nexport default function TopBar() {\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const dashBoardMatch = useRouteMatch('/');\n  const loginScreenMatch = useRouteMatch('/login');\n\n  if (!loginScreenMatch) {\n    return (\n      <div className={styles.top_bar}>\n        <div className={styles.top_bar__left}>\n          {!dashBoardMatch.isExact && (\n            <IconButton aria-label=\"Dashboard\" onClick={() => history.push('/')}>\n              <AppsIcon style={{ width: '4.5rem', height: '4.5rem', color: '#6d7993' }} />\n            </IconButton>\n          )}\n          {/* <NavigateBeforeIcon style={{ width: '4.5rem', height: '4.5rem', color: '#6d7993' }} /> */}\n        </div>\n        <div className={styles.top_bar__left}>\n          <Button aria-label=\"logout\" onClick={() => dispatch(userLogout())}>\n            <div className={styles.logout_button}>Logout</div>\n          </Button>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\n\n/* Components */\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n/* Store */\nimport { userLogin } from '../../store/modules/user';\n\n/* Styles */\nimport '../../styles/typography.scss';\nimport style from './LoginScreen.module.scss';\n\nconst styles = {\n  button: {\n    marginTop: '8rem',\n    padding: '0 4rem',\n    width: '40rem',\n  },\n  textField: {\n    marginTop: '4rem',\n    width: '40rem',\n  },\n  resize: {\n    fontSize: '2rem',\n  },\n};\n\nclass LoginScreen extends React.Component {\n  render() {\n    const { classes, history } = this.props;\n\n    // let eMail = '';\n    // let password = '';\n\n    return (\n      <div className={style.login}>\n        <h1 className=\"header_big\">Login</h1>\n        <div>\n          <TextField\n            id=\"standard-basic\"\n            className={classes.textField}\n            label=\"E-Mail\"\n            margin=\"normal\"\n            type=\"email\"\n            onChange={e => {\n              /*eMail = e.target.value*/\n            }}\n            InputProps={{\n              classes: {\n                input: classes.resize,\n              },\n            }}\n            InputLabelProps={{\n              classes: {\n                root: classes.resize,\n              },\n            }}\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"standard-password-input\"\n            label=\"Password\"\n            className={classes.textField}\n            type=\"password\"\n            autoComplete=\"current-password\"\n            margin=\"normal\"\n            onChange={e => {\n              /*password = e.target.value*/\n            }}\n            InputProps={{\n              classes: {\n                input: classes.resize,\n              },\n            }}\n            InputLabelProps={{\n              classes: {\n                root: classes.resize,\n              },\n            }}\n          />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          classes={{\n            label: classes.resize,\n          }}\n          className={classes.button}\n          onClick={() => {\n            this.props.userLogin();\n            history.replace('/');\n          }}\n        >\n          Login\n        </Button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps() {\n  return {};\n}\n\nconst mapDispatchToProps = {\n  userLogin,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(withRouter(LoginScreen)));\n","import React from 'react';\n\n/* Components */\n\n/* Store */\n\n/* Styles */\nimport styles from './SiteHeader.module.scss';\n\nexport default function SiteHeader({ mainTitle, subTitle }) {\n  return (\n    <div className={styles.site_header}>\n      <div className={styles.site_header__sub}>{subTitle}&nbsp;</div>\n      <div className={styles.site_header__main}>{mainTitle}</div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\n/* Components */\n\n/* Store */\n\n/* Styles */\nimport styles from './DashBoardCard.module.scss';\n\nexport default function DashBoardCard({ title, icon, targetPath = '/' }) {\n  let history = useHistory();\n  return (\n    <div className={styles.dashBoardCardWrapper} onClick={() => history.push(targetPath)}>\n      <div className={styles.dashBoardCard}>\n        <div className={styles.dashBoardCard__title}>{title}&nbsp;</div>\n        <div className={styles.dashBoardCard__image} style={{ backgroundImage: `url(${icon})` }}>\n          {/* <img src={image}></img> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n/* Images */\nimport DeviceIcon from '../../assets/icons/dashBoard/dash-board_dev.svg';\nimport EventIcon from '../../assets/icons/dashBoard/dash-board_event.svg';\nimport OrganisationIcon from '../../assets/icons/dashBoard/dash-board_org.svg';\nimport SettingsIcon from '../../assets/icons/dashBoard/dash-board_settings.svg';\nimport ZoneIcon from '../../assets/icons/dashBoard/dash-board_zone.svg';\n\n/* Components */\nimport SiteHeader from '../../components/SiteHeader';\nimport DashBoardCard from '../../components/DashBoardCard';\n\n/* Store */\n\n/* Styles */\nimport '../../styles/layout.scss';\nimport style from './DashboardScreen.module.scss';\n\nclass DashboardScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"screen_wrapper\">\n        <div className=\"screen_wrapper__left\"></div>\n        <div className=\"screen_wrapper__center\">\n          <SiteHeader mainTitle=\"Dashboard\" subTitle=\"Organisatioin\" />\n          <div className={style.dash_board_cards}>\n            <DashBoardCard title=\"Geräte\" icon={DeviceIcon} targetPath=\"/devices\" />\n            <DashBoardCard\n              title=\"Organisation\"\n              icon={OrganisationIcon}\n              targetPath=\"/organisation\"\n            />\n            <DashBoardCard title=\"Events\" icon={EventIcon} targetPath=\"/events\" />\n            <DashBoardCard title=\"Zonen\" icon={ZoneIcon} targetPath=\"/zones\" />\n            <DashBoardCard title=\"Einstellungen\" icon={SettingsIcon} targetPath=\"/settings\" />\n          </div>\n        </div>\n        <div className=\"screen_wrapper__right\"></div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n/* Components */\nimport SiteHeader from '../../components/SiteHeader';\n\n/* Store */\n\n/* Styles */\nimport '../../styles/layout.scss';\n// import styles from './DevicesScreen.module.scss';\n\nclass DevicesScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"screen_wrapper\">\n        <div className=\"screen_wrapper__left\"></div>\n        <div className=\"screen_wrapper__center\">\n          <SiteHeader mainTitle=\"Meine Geräte\" />\n        </div>\n        <div className=\"screen_wrapper__right\"></div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DevicesScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n/* Components */\nimport SiteHeader from '../../components/SiteHeader';\n\n/* Store */\n\n/* Styles */\nimport '../../styles/layout.scss';\n// import styles from './OrganisationScreen.module.scss';\n\nclass OrganisationScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"screen_wrapper\">\n        <div className=\"screen_wrapper__left\"></div>\n        <div className=\"screen_wrapper__center\">\n          <SiteHeader mainTitle=\"Organisation\" />\n        </div>\n        <div className=\"screen_wrapper__right\"></div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganisationScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n/* Components */\nimport SiteHeader from '../../components/SiteHeader';\n\n/* Store */\n\n/* Styles */\nimport '../../styles/layout.scss';\n// import styles from './EventsScreen.module.scss';\n\nclass EventsScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"screen_wrapper\">\n        <div className=\"screen_wrapper__left\"></div>\n        <div className=\"screen_wrapper__center\">\n          <SiteHeader mainTitle=\"Events\" />\n        </div>\n        <div className=\"screen_wrapper__right\"></div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n/* Components */\nimport SiteHeader from '../../components/SiteHeader';\n\n/* Store */\n\n/* Styles */\nimport '../../styles/layout.scss';\n// import styles from './ZonesScreen.module.scss';\n\nclass ZonesScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"screen_wrapper\">\n        <div className=\"screen_wrapper__left\"></div>\n        <div className=\"screen_wrapper__center\">\n          <SiteHeader mainTitle=\"Zonen\" />\n        </div>\n        <div className=\"screen_wrapper__right\"></div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZonesScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n/* Components */\nimport SiteHeader from '../../components/SiteHeader';\n\n/* Store */\n\n/* Styles */\nimport '../../styles/layout.scss';\n// import styles from './SettingsScreen.module.scss';\n\nclass SettingsScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"screen_wrapper\">\n        <div className=\"screen_wrapper__left\"></div>\n        <div className=\"screen_wrapper__center\">\n          <SiteHeader mainTitle=\"Einstellungen\" />\n        </div>\n        <div className=\"screen_wrapper__right\"></div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n/* Components */\nimport SiteHeader from '../../components/SiteHeader';\n\n/* Store */\n\n/* Styles */\nimport '../../styles/layout.scss';\n// import styles from './ErrorScreen.module.scss';\n\nclass ErrorScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"screen_wrapper\">\n        <div className=\"screen_wrapper__left\"></div>\n        <div className=\"screen_wrapper__center\">\n          <SiteHeader mainTitle=\"Seite nicht gefunden\" subTitle=\"Error 404\" />\n        </div>\n        <div className=\"screen_wrapper__right\"></div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorScreen);\n","import React from 'react';\n\n/* Components */\n\n/* Store */\n\n/* Styles */\nimport styles from './Footer.module.scss';\n\nexport default function Footer() {\n  return <div className={styles.top_bar}></div>;\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n/* Components */\nimport PrivateRoute from './PrivateRoute';\nimport TopBar from '../components/TopBar';\nimport LoginScreen from '../screens/LoginScreen';\nimport DashboardScreen from '../screens/DashboardScreen';\nimport DevicesScreen from '../screens/DevicesScreen';\nimport OrganisationScreen from '../screens/OrganisationScreen';\nimport EventsScreen from '../screens/EventsScreen';\nimport ZonesScreen from '../screens/ZonesScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport ErrorScreen from '../screens/ErrorScreen';\nimport Footer from '../components/Footer';\n\n/* Store */\n\n/* Styles */\nimport './AppRouter.scss';\n\nclass AppRouter extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"app_root\">\n          <TopBar />\n          <Switch>\n            <Route exact path=\"/login\" component={LoginScreen} />\n\n            <PrivateRoute exact path=\"/\">\n              <DashboardScreen />\n            </PrivateRoute>\n            <PrivateRoute path=\"/devices\">\n              <DevicesScreen />\n            </PrivateRoute>\n            <PrivateRoute path=\"/organisation\">\n              <OrganisationScreen />\n            </PrivateRoute>\n            <PrivateRoute path=\"/events\">\n              <EventsScreen />\n            </PrivateRoute>\n            <PrivateRoute path=\"/zones\">\n              <ZonesScreen />\n            </PrivateRoute>\n            <PrivateRoute path=\"/settings\">\n              <SettingsScreen />\n            </PrivateRoute>\n            <PrivateRoute path=\"*\">\n              <ErrorScreen />\n            </PrivateRoute>\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return {\n    loggedIn: user.loggedIn,\n  };\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppRouter);\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport user from './modules/user';\n\nconst reducer = combineReducers({\n  user,\n});\n\nconst configureStore = initialState => {\n  const middleware = [ReduxThunk, logger];\n\n  const store = createStore(\n    reducer,\n    initialState,\n    applyMiddleware(...middleware)\n  );\n\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\n/* Components */\nimport AppRouter from './routers/AppRouter';\n\n/* Store */\nimport configureStore from './store/configureStore';\n\n/* Styles */\nimport './index.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#6d7993' }, // Purple and green play nicely together.\n    secondary: { main: '#054b1a' }, // This is just green.A700 as hex.\n  },\n});\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <AppRouter />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}